{
	"id": "e9b2667694f4970ef3cb0a3d3bf7e955",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"solidity-learn/forandwhileloop.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity 0.8.7;\r\n\r\ncontract forandwhile{\r\n    function forloop() external pure returns(uint){\r\n        uint s = 0;\r\n        for(uint i =0; i<1000;i++){\r\n            s+=i;\r\n        }\r\n        return s;\r\n    }\r\n    function whileloop() external pure returns(int){\r\n        \r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"solidity-learn/forandwhileloop.sol": {
				"forandwhile": {
					"abi": [
						{
							"inputs": [],
							"name": "forloop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "whileloop",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"solidity-learn/forandwhileloop.sol\":57:319  contract forandwhile{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"solidity-learn/forandwhileloop.sol\":57:319  contract forandwhile{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4c999463\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbc68f960\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"solidity-learn/forandwhileloop.sol\":251:316  function whileloop() external pure returns(int){\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity-learn/forandwhileloop.sol\":84:245  function forloop() external pure returns(uint){\r... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity-learn/forandwhileloop.sol\":251:316  function whileloop() external pure returns(int){\r... */\n    tag_6:\n        /* \"solidity-learn/forandwhileloop.sol\":294:297  int */\n      0x00\n        /* \"solidity-learn/forandwhileloop.sol\":251:316  function whileloop() external pure returns(int){\r... */\n      swap1\n      jump\t// out\n        /* \"solidity-learn/forandwhileloop.sol\":84:245  function forloop() external pure returns(uint){\r... */\n    tag_10:\n        /* \"solidity-learn/forandwhileloop.sol\":125:129  uint */\n      0x00\n        /* \"solidity-learn/forandwhileloop.sol\":141:147  uint s */\n      dup1\n        /* \"solidity-learn/forandwhileloop.sol\":150:151  0 */\n      0x00\n        /* \"solidity-learn/forandwhileloop.sol\":141:151  uint s = 0 */\n      swap1\n      pop\n        /* \"solidity-learn/forandwhileloop.sol\":166:172  uint i */\n      0x00\n        /* \"solidity-learn/forandwhileloop.sol\":162:219  for(uint i =0; i<1000;i++){\r... */\n    tag_15:\n        /* \"solidity-learn/forandwhileloop.sol\":179:183  1000 */\n      0x03e8\n        /* \"solidity-learn/forandwhileloop.sol\":177:178  i */\n      dup2\n        /* \"solidity-learn/forandwhileloop.sol\":177:183  i<1000 */\n      lt\n        /* \"solidity-learn/forandwhileloop.sol\":162:219  for(uint i =0; i<1000;i++){\r... */\n      iszero\n      tag_16\n      jumpi\n        /* \"solidity-learn/forandwhileloop.sol\":206:207  i */\n      dup1\n        /* \"solidity-learn/forandwhileloop.sol\":203:207  s+=i */\n      dup3\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      swap2\n      pop\n        /* \"solidity-learn/forandwhileloop.sol\":184:187  i++ */\n      dup1\n      dup1\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      swap2\n      pop\n      pop\n        /* \"solidity-learn/forandwhileloop.sol\":162:219  for(uint i =0; i<1000;i++){\r... */\n      jump(tag_15)\n    tag_16:\n      pop\n        /* \"solidity-learn/forandwhileloop.sol\":236:237  s */\n      dup1\n        /* \"solidity-learn/forandwhileloop.sol\":229:237  return s */\n      swap2\n      pop\n      pop\n        /* \"solidity-learn/forandwhileloop.sol\":84:245  function forloop() external pure returns(uint){\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:122   */\n    tag_23:\n        /* \"#utility.yul\":92:115   */\n      tag_25\n        /* \"#utility.yul\":109:114   */\n      dup2\n        /* \"#utility.yul\":92:115   */\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":87:90   */\n      dup3\n        /* \"#utility.yul\":80:116   */\n      mstore\n        /* \"#utility.yul\":7:122   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":128:246   */\n    tag_27:\n        /* \"#utility.yul\":215:239   */\n      tag_29\n        /* \"#utility.yul\":233:238   */\n      dup2\n        /* \"#utility.yul\":215:239   */\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":210:213   */\n      dup3\n        /* \"#utility.yul\":203:240   */\n      mstore\n        /* \"#utility.yul\":128:246   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":252:470   */\n    tag_8:\n        /* \"#utility.yul\":343:347   */\n      0x00\n        /* \"#utility.yul\":381:383   */\n      0x20\n        /* \"#utility.yul\":370:379   */\n      dup3\n        /* \"#utility.yul\":366:384   */\n      add\n        /* \"#utility.yul\":358:384   */\n      swap1\n      pop\n        /* \"#utility.yul\":394:463   */\n      tag_32\n        /* \"#utility.yul\":460:461   */\n      0x00\n        /* \"#utility.yul\":449:458   */\n      dup4\n        /* \"#utility.yul\":445:462   */\n      add\n        /* \"#utility.yul\":436:442   */\n      dup5\n        /* \"#utility.yul\":394:463   */\n      tag_23\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":252:470   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":476:698   */\n    tag_12:\n        /* \"#utility.yul\":569:573   */\n      0x00\n        /* \"#utility.yul\":607:609   */\n      0x20\n        /* \"#utility.yul\":596:605   */\n      dup3\n        /* \"#utility.yul\":592:610   */\n      add\n        /* \"#utility.yul\":584:610   */\n      swap1\n      pop\n        /* \"#utility.yul\":620:691   */\n      tag_34\n        /* \"#utility.yul\":688:689   */\n      0x00\n        /* \"#utility.yul\":677:686   */\n      dup4\n        /* \"#utility.yul\":673:690   */\n      add\n        /* \"#utility.yul\":664:670   */\n      dup5\n        /* \"#utility.yul\":620:691   */\n      tag_27\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":476:698   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":704:1009   */\n    tag_19:\n        /* \"#utility.yul\":744:747   */\n      0x00\n        /* \"#utility.yul\":763:783   */\n      tag_36\n        /* \"#utility.yul\":781:782   */\n      dup3\n        /* \"#utility.yul\":763:783   */\n      tag_30\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":758:783   */\n      swap2\n      pop\n        /* \"#utility.yul\":797:817   */\n      tag_37\n        /* \"#utility.yul\":815:816   */\n      dup4\n        /* \"#utility.yul\":797:817   */\n      tag_30\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":792:817   */\n      swap3\n      pop\n        /* \"#utility.yul\":951:952   */\n      dup3\n        /* \"#utility.yul\":883:949   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":879:953   */\n      sub\n        /* \"#utility.yul\":876:877   */\n      dup3\n        /* \"#utility.yul\":873:954   */\n      gt\n        /* \"#utility.yul\":870:977   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":957:975   */\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":870:977   */\n    tag_38:\n        /* \"#utility.yul\":1001:1002   */\n      dup3\n        /* \"#utility.yul\":998:999   */\n      dup3\n        /* \"#utility.yul\":994:1003   */\n      add\n        /* \"#utility.yul\":987:1003   */\n      swap1\n      pop\n        /* \"#utility.yul\":704:1009   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1015:1091   */\n    tag_26:\n        /* \"#utility.yul\":1051:1058   */\n      0x00\n        /* \"#utility.yul\":1080:1085   */\n      dup2\n        /* \"#utility.yul\":1069:1085   */\n      swap1\n      pop\n        /* \"#utility.yul\":1015:1091   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1097:1174   */\n    tag_30:\n        /* \"#utility.yul\":1134:1141   */\n      0x00\n        /* \"#utility.yul\":1163:1168   */\n      dup2\n        /* \"#utility.yul\":1152:1168   */\n      swap1\n      pop\n        /* \"#utility.yul\":1097:1174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1180:1413   */\n    tag_21:\n        /* \"#utility.yul\":1219:1222   */\n      0x00\n        /* \"#utility.yul\":1242:1266   */\n      tag_44\n        /* \"#utility.yul\":1260:1265   */\n      dup3\n        /* \"#utility.yul\":1242:1266   */\n      tag_30\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1233:1266   */\n      swap2\n      pop\n        /* \"#utility.yul\":1288:1354   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1281:1286   */\n      dup3\n        /* \"#utility.yul\":1278:1355   */\n      eq\n        /* \"#utility.yul\":1275:1378   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":1358:1376   */\n      tag_46\n      tag_40\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1275:1378   */\n    tag_45:\n        /* \"#utility.yul\":1405:1406   */\n      0x01\n        /* \"#utility.yul\":1398:1403   */\n      dup3\n        /* \"#utility.yul\":1394:1407   */\n      add\n        /* \"#utility.yul\":1387:1407   */\n      swap1\n      pop\n        /* \"#utility.yul\":1180:1413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1419:1599   */\n    tag_40:\n        /* \"#utility.yul\":1467:1544   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1464:1465   */\n      0x00\n        /* \"#utility.yul\":1457:1545   */\n      mstore\n        /* \"#utility.yul\":1564:1568   */\n      0x11\n        /* \"#utility.yul\":1561:1562   */\n      0x04\n        /* \"#utility.yul\":1554:1569   */\n      mstore\n        /* \"#utility.yul\":1588:1592   */\n      0x24\n        /* \"#utility.yul\":1585:1586   */\n      0x00\n        /* \"#utility.yul\":1578:1593   */\n      revert\n\n    auxdata: 0xa2646970667358221220075462b3aa324e67d433fdb4a8b989be3c82c9db5c9b19fedb202b2eacd6d55964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610225806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634c9994631461003b578063bc68f96014610059575b600080fd5b610043610077565b60405161005091906100d7565b60405180910390f35b61006161007c565b60405161006e91906100f2565b60405180910390f35b600090565b6000806000905060005b6103e88110156100b157808261009c919061010d565b915080806100a990610177565b915050610086565b508091505090565b6100c281610163565b82525050565b6100d18161016d565b82525050565b60006020820190506100ec60008301846100b9565b92915050565b600060208201905061010760008301846100c8565b92915050565b60006101188261016d565b91506101238361016d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610158576101576101c0565b5b828201905092915050565b6000819050919050565b6000819050919050565b60006101828261016d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156101b5576101b46101c0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220075462b3aa324e67d433fdb4a8b989be3c82c9db5c9b19fedb202b2eacd6d55964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C999463 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xBC68F960 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0x3E8 DUP2 LT ISZERO PUSH2 0xB1 JUMPI DUP1 DUP3 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x10D JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xA9 SWAP1 PUSH2 0x177 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x86 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xC2 DUP2 PUSH2 0x163 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD1 DUP2 PUSH2 0x16D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x107 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP3 PUSH2 0x16D JUMP JUMPDEST SWAP2 POP PUSH2 0x123 DUP4 PUSH2 0x16D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x158 JUMPI PUSH2 0x157 PUSH2 0x1C0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182 DUP3 PUSH2 0x16D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1B5 JUMPI PUSH2 0x1B4 PUSH2 0x1C0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SLOAD PUSH3 0xB3AA32 0x4E PUSH8 0xD433FDB4A8B989BE EXTCODECOPY DUP3 0xC9 0xDB 0x5C SWAP12 NOT INVALID 0xDB KECCAK256 0x2B 0x2E 0xAC 0xD6 0xD5 MSIZE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "57:262:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@forloop_29": {
									"entryPoint": 124,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@whileloop_35": {
									"entryPoint": 119,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 448,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1602:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "87:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "109:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "92:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "92:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "80:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "80:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "80:36:1"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "58:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "65:3:1",
														"type": ""
													}
												],
												"src": "7:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "193:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "210:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "233:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "215:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "215:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "203:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "181:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "188:3:1",
														"type": ""
													}
												],
												"src": "128:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "348:122:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "358:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "370:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "381:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "366:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "358:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "436:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "449:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "460:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "445:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "445:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "394:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "394:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "394:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "320:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "332:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "343:4:1",
														"type": ""
													}
												],
												"src": "252:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "574:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "584:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "596:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "607:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "592:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "592:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "584:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "664:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "677:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "688:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "673:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "673:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "620:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "620:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "620:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "546:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "558:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "569:4:1",
														"type": ""
													}
												],
												"src": "476:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "781:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "763:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "758:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "792:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "815:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "797:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "792:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "955:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "957:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "957:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "957:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "876:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "883:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "951:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "879:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "879:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "873:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "873:81:1"
															},
															"nodeType": "YulIf",
															"src": "870:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "987:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "998:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1001:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "994:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "994:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "987:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "735:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "738:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "744:3:1",
														"type": ""
													}
												],
												"src": "704:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1059:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1069:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1080:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1069:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1041:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1051:7:1",
														"type": ""
													}
												],
												"src": "1015:76:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1142:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1152:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1163:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1152:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1124:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1134:7:1",
														"type": ""
													}
												],
												"src": "1097:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1223:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1233:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1260:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1242:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1233:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1356:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1358:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1358:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1358:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1281:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1278:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1278:77:1"
															},
															"nodeType": "YulIf",
															"src": "1275:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1398:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1405:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1394:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1394:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1387:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1209:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1219:3:1",
														"type": ""
													}
												],
												"src": "1180:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1447:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1464:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1467:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1457:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1457:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1561:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1564:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1554:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1554:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1585:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1588:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1578:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1578:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1578:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1419:180:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80634c9994631461003b578063bc68f96014610059575b600080fd5b610043610077565b60405161005091906100d7565b60405180910390f35b61006161007c565b60405161006e91906100f2565b60405180910390f35b600090565b6000806000905060005b6103e88110156100b157808261009c919061010d565b915080806100a990610177565b915050610086565b508091505090565b6100c281610163565b82525050565b6100d18161016d565b82525050565b60006020820190506100ec60008301846100b9565b92915050565b600060208201905061010760008301846100c8565b92915050565b60006101188261016d565b91506101238361016d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610158576101576101c0565b5b828201905092915050565b6000819050919050565b6000819050919050565b60006101828261016d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156101b5576101b46101c0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220075462b3aa324e67d433fdb4a8b989be3c82c9db5c9b19fedb202b2eacd6d55964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C999463 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xBC68F960 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0x3E8 DUP2 LT ISZERO PUSH2 0xB1 JUMPI DUP1 DUP3 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x10D JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xA9 SWAP1 PUSH2 0x177 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x86 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xC2 DUP2 PUSH2 0x163 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD1 DUP2 PUSH2 0x16D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x107 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP3 PUSH2 0x16D JUMP JUMPDEST SWAP2 POP PUSH2 0x123 DUP4 PUSH2 0x16D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x158 JUMPI PUSH2 0x157 PUSH2 0x1C0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182 DUP3 PUSH2 0x16D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1B5 JUMPI PUSH2 0x1B4 PUSH2 0x1C0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SLOAD PUSH3 0xB3AA32 0x4E PUSH8 0xD433FDB4A8B989BE EXTCODECOPY DUP3 0xC9 0xDB 0x5C SWAP12 NOT INVALID 0xDB KECCAK256 0x2B 0x2E 0xAC 0xD6 0xD5 MSIZE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "57:262:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;251:65;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;84:161;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;251:65;294:3;251:65;:::o;84:161::-;125:4;141:6;150:1;141:10;;166:6;162:57;179:4;177:1;:6;162:57;;;206:1;203:4;;;;;:::i;:::-;;;184:3;;;;;:::i;:::-;;;;162:57;;;;236:1;229:8;;;84:161;:::o;7:115:1:-;92:23;109:5;92:23;:::i;:::-;87:3;80:36;7:115;;:::o;128:118::-;215:24;233:5;215:24;:::i;:::-;210:3;203:37;128:118;;:::o;252:218::-;343:4;381:2;370:9;366:18;358:26;;394:69;460:1;449:9;445:17;436:6;394:69;:::i;:::-;252:218;;;;:::o;476:222::-;569:4;607:2;596:9;592:18;584:26;;620:71;688:1;677:9;673:17;664:6;620:71;:::i;:::-;476:222;;;;:::o;704:305::-;744:3;763:20;781:1;763:20;:::i;:::-;758:25;;797:20;815:1;797:20;:::i;:::-;792:25;;951:1;883:66;879:74;876:1;873:81;870:107;;;957:18;;:::i;:::-;870:107;1001:1;998;994:9;987:16;;704:305;;;;:::o;1015:76::-;1051:7;1080:5;1069:16;;1015:76;;;:::o;1097:77::-;1134:7;1163:5;1152:16;;1097:77;;;:::o;1180:233::-;1219:3;1242:24;1260:5;1242:24;:::i;:::-;1233:33;;1288:66;1281:5;1278:77;1275:103;;;1358:18;;:::i;:::-;1275:103;1405:1;1398:5;1394:13;1387:20;;1180:233;;;:::o;1419:180::-;1467:77;1464:1;1457:88;1564:4;1561:1;1554:15;1588:4;1585:1;1578:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "109800",
								"executionCost": "159",
								"totalCost": "109959"
							},
							"external": {
								"forloop()": "infinite",
								"whileloop()": "307"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 319,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 319,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 319,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 319,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 319,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 319,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 319,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 319,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 319,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 319,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 319,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 319,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 319,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 319,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 319,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 319,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 319,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220075462b3aa324e67d433fdb4a8b989be3c82c9db5c9b19fedb202b2eacd6d55964736f6c63430008070033",
									".code": [
										{
											"begin": 57,
											"end": 319,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 319,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 319,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 319,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "PUSH",
											"source": 0,
											"value": "4C999463"
										},
										{
											"begin": 57,
											"end": 319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "PUSH",
											"source": 0,
											"value": "BC68F960"
										},
										{
											"begin": 57,
											"end": 319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 319,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 251,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 251,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 251,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 251,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 251,
											"end": 316,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 251,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 251,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 251,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 251,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 251,
											"end": 316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 251,
											"end": 316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 251,
											"end": 316,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 251,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 251,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 251,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 251,
											"end": 316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 251,
											"end": 316,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 251,
											"end": 316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 316,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 84,
											"end": 245,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 84,
											"end": 245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 84,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 84,
											"end": 245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 84,
											"end": 245,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 84,
											"end": 245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84,
											"end": 245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 84,
											"end": 245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 84,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 84,
											"end": 245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 84,
											"end": 245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 84,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 84,
											"end": 245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 84,
											"end": 245,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 84,
											"end": 245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84,
											"end": 245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 84,
											"end": 245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 84,
											"end": 245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84,
											"end": 245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 84,
											"end": 245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 84,
											"end": 245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 84,
											"end": 245,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 251,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 251,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 316,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 84,
											"end": 245,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 84,
											"end": 245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 125,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 141,
											"end": 147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 150,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 141,
											"end": 151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 166,
											"end": 172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 219,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 162,
											"end": 219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 179,
											"end": 183,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 177,
											"end": 178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 177,
											"end": 183,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 162,
											"end": 219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 162,
											"end": 219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 162,
											"end": 219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 203,
											"end": 207,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 203,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 203,
											"end": 207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 203,
											"end": 207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 203,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 203,
											"end": 207,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 203,
											"end": 207,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 203,
											"end": 207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 203,
											"end": 207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 203,
											"end": 207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 184,
											"end": 187,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 184,
											"end": 187,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 184,
											"end": 187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 162,
											"end": 219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 162,
											"end": 219,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 162,
											"end": 219,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 162,
											"end": 219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 162,
											"end": 219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 236,
											"end": 237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 229,
											"end": 237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 229,
											"end": 237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 229,
											"end": 237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 84,
											"end": 245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 84,
											"end": 245,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 122,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7,
											"end": 122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 92,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 109,
											"end": 114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 92,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 92,
											"end": 115,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 92,
											"end": 115,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 92,
											"end": 115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 87,
											"end": 90,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 80,
											"end": 116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 122,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 128,
											"end": 246,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 128,
											"end": 246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 215,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 233,
											"end": 238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 215,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 215,
											"end": 239,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 215,
											"end": 239,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 215,
											"end": 239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 210,
											"end": 213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 203,
											"end": 240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 128,
											"end": 246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 128,
											"end": 246,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 252,
											"end": 470,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 252,
											"end": 470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 370,
											"end": 379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 366,
											"end": 384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 394,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 460,
											"end": 461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 458,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 445,
											"end": 462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 436,
											"end": 442,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 394,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 394,
											"end": 463,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 394,
											"end": 463,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 394,
											"end": 463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 252,
											"end": 470,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 252,
											"end": 470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 252,
											"end": 470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 252,
											"end": 470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 252,
											"end": 470,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 476,
											"end": 698,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 476,
											"end": 698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 569,
											"end": 573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 609,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 596,
											"end": 605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 592,
											"end": 610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 584,
											"end": 610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 584,
											"end": 610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 620,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 688,
											"end": 689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 686,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 673,
											"end": 690,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 664,
											"end": 670,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 620,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 620,
											"end": 691,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 620,
											"end": 691,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 620,
											"end": 691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 476,
											"end": 698,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 476,
											"end": 698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 476,
											"end": 698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 476,
											"end": 698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 476,
											"end": 698,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 704,
											"end": 1009,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 704,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 744,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 781,
											"end": 782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 763,
											"end": 783,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 783,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 763,
											"end": 783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 797,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 815,
											"end": 816,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 797,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 797,
											"end": 817,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 797,
											"end": 817,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 797,
											"end": 817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 792,
											"end": 817,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 792,
											"end": 817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 883,
											"end": 949,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 879,
											"end": 953,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 876,
											"end": 877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 873,
											"end": 954,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 870,
											"end": 977,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 870,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 870,
											"end": 977,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 957,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 870,
											"end": 977,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 870,
											"end": 977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1002,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 998,
											"end": 999,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 704,
											"end": 1009,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 704,
											"end": 1009,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 704,
											"end": 1009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 704,
											"end": 1009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 704,
											"end": 1009,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1015,
											"end": 1091,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1015,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1091,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1091,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1097,
											"end": 1174,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1097,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1174,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1180,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1180,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1242,
											"end": 1266,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1242,
											"end": 1266,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1242,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1354,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1278,
											"end": 1355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1378,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1275,
											"end": 1378,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1358,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1376,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1358,
											"end": 1376,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1358,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1378,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1275,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1398,
											"end": 1403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1394,
											"end": 1407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1413,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1419,
											"end": 1599,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1544,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1568,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1561,
											"end": 1562,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1554,
											"end": 1569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1592,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1585,
											"end": 1586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1593,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"forloop()": "bc68f960",
							"whileloop()": "4c999463"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"forloop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whileloop\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity-learn/forandwhileloop.sol\":\"forandwhile\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidity-learn/forandwhileloop.sol\":{\"keccak256\":\"0x63b410490b696678ff6627ccc9f2562ea66ace811af6df8142c7d3f8888f3a0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82087bf29f4bc3d7f66b9eec7c4bf2d50d1eb68eb9ea272e69e59f26f9d02f18\",\"dweb:/ipfs/QmVFXVMcYkDCtpDViFEde5jw6SPbFgv2sDm5MnCRCNSwoi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"solidity-learn/forandwhileloop.sol": {
				"ast": {
					"absolutePath": "solidity-learn/forandwhileloop.sol",
					"exportedSymbols": {
						"forandwhile": [
							36
						]
					},
					"id": 37,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "31:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 36,
							"linearizedBaseContracts": [
								36
							],
							"name": "forandwhile",
							"nameLocation": "66:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "130:115:0",
										"statements": [
											{
												"assignments": [
													7
												],
												"declarations": [
													{
														"constant": false,
														"id": 7,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "146:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 28,
														"src": "141:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 6,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "141:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 9,
												"initialValue": {
													"hexValue": "30",
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "150:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "141:10:0"
											},
											{
												"body": {
													"id": 24,
													"nodeType": "Block",
													"src": "188:31:0",
													"statements": [
														{
															"expression": {
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 20,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "203:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 21,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "206:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "203:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 23,
															"nodeType": "ExpressionStatement",
															"src": "203:4:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "177:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "179:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "177:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 25,
												"initializationExpression": {
													"assignments": [
														11
													],
													"declarations": [
														{
															"constant": false,
															"id": 11,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "171:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 25,
															"src": "166:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 10,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "166:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 13,
													"initialValue": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "174:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "166:9:0"
												},
												"loopExpression": {
													"expression": {
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "184:3:0",
														"subExpression": {
															"id": 17,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "184:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 19,
													"nodeType": "ExpressionStatement",
													"src": "184:3:0"
												},
												"nodeType": "ForStatement",
												"src": "162:57:0"
											},
											{
												"expression": {
													"id": 26,
													"name": "s",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "236:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5,
												"id": 27,
												"nodeType": "Return",
												"src": "229:8:0"
											}
										]
									},
									"functionSelector": "bc68f960",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forloop",
									"nameLocation": "93:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "100:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "125:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "125:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "124:6:0"
									},
									"scope": 36,
									"src": "84:161:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "298:18:0",
										"statements": []
									},
									"functionSelector": "4c999463",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "whileloop",
									"nameLocation": "260:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "269:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "294:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 31,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "294:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "293:5:0"
									},
									"scope": 36,
									"src": "251:65:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 37,
							"src": "57:262:0",
							"usedErrors": []
						}
					],
					"src": "31:288:0"
				},
				"id": 0
			}
		}
	}
}